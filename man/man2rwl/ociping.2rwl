.TH ociping "2rwl" "July 2022" "RWP*Load Simulator" "Utilities Syntax"
.SH NAME
ociping \- Find OCIPing rates over a database connection
.SH SYNOPSIS
\fBociping -l u/p@c [--no-timestamp] [--csvoutput=file] [--interval=N] [--period=N] [--flush-output] [--flush-csv] [--unixepoch] [--utctime] [--utcformat=fmt] [--csvexcel]\fR
.P
The ociping utility executes something similar to ping
repeatedly showing the time it takes to execute a single OCIPing over
a database connection.
If you also want to show the time taking to establish connections, use connping(2rwl).
.SH OPTIONS
.B -l u/p
.br
.B -l u/p@c
.RS 4
Compulsory option to provide the username, password, and potentially
connect string for a database connection.
If you omit /p, rwloadsim will prompt for the password.
.RE
.P
.B --interval=N
.RS 4
The interval (in seconds) between each ping; default 1s.
.RE
.P
.B --period=N
.RS 4
The period in seconds to run ping; default 60s.
.RE
.P
.B --no-timestamp
.RS 4
Do not include timestamp (in seconds) in output.
.RE
.P
.B --csvoutput=file
.RS 4
Output timestamp (unless --no-timestamp) and the OCIPing time separated by space to the named file.
.RE
.P
.B --flush-output
.br
.B --flush-csv
.RS 4
These will flush respectively stdout and the csv file after each line.
This is e.g. useful if you send stdout to a pipeline using the tee command, or if you are 
running tail -f of the csvfile.
.RE
.P
.B --unixepoch
.RS 4
Timestamps will be output in seconds since the UNIX epoch.
.RE
.P
.B --utctime
.RS 4
Timestamps will be output as UTC time in format YYYY.MM.DD.HH24:MI:SS.FF2
unless the next option is also provided.
.RE
.P
.B --utcformat=formatstring
.RS 4
If --utctime is in effect, use an alternative format string, which musts comply with
the requirements of the Oracle TO_CHAR function.
.RE
.P
.B --csvexcel
.RS 4
If a csv file is being generated, the header line will not have an initial '#', the
field separator will be ';' and the file will have CRLF line terminators.
It it suggested to also use --utctime --utcformat='YYYY/MM/DD HH24:MI:SS'.
.P
.SH USAGE
When executing, it will show timestamp (unless --no-timestamp is provided) and the time
to perform an OCIPing until
the run period is over, and at the end show averages,
standard deviation, min and max values.
The output is in ms.
You can kill execution prematurely by typing ctrl-c.
.SH EXAMPLE
.nf
ociping --csvoutput=ping.csv --period=10 -ul username/{password}

RWP*Load Simulator Release 3.0.2.4 Development on Wed, 10 Aug 2022 10:02:47 UTC
Connected default database to:
Oracle Database 21c Enterprise Edition Release 21.0.0.0.0 - Production
0.051 0.0
0.054 1.0
0.196 2.0
0.051 3.0
0.049 4.0
0.050 5.0
0.048 6.0
0.051 7.0
0.064 8.0
0.048 9.0
ociping (ms) mean=0.066, stddev=0.043, min=0.048, max=0.196
.fi
.P
You could subsequently plot the results using gnuplot with an input like this:
.P
.nf
set yrange[0:*]
plot "ping.csv" using 1:2 with lines title "OCIPing"
.fi
.SH NOTES
If you are using the full distribution of rwloadsim, ociping is an executable shell script
in the bin directory that calls rwloadsim with the -u option getting ociping.rwl from
the public directory.
As a stand alone binary distribution, ociping is an executable with the ociping.rwl code
embedded.
.SH COPYRIGHT
Copyright \(co 2022 Oracle Corporation
.br
Licensed under the Universal Permissive License v 1.0
as shown at https://oss.oracle.com/licenses/upl
.SH "SEE ALSO"
rwloadsim(1rwl), connping(2rwl), utilities(2rwl)
