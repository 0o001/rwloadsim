.TH databasestatement "1rwl" "September 2020" "RWP*Load Simulator" "Program Syntax"
.SH NAME
databasestatement \- RWP*Load Simulator execute database calls
.SH SYNTAX
.nf
databasestatement ::=
  \fBcommit\fR
| \fBrollback\fR
| \fBociping\fR
| \fBmodify\fR \fBdatabase\fR \fBrelease\fR
| \fBmodify\fR \fBdatabase\fR \fBconnectionclass\fR concatenation
| \fBwritelob\fR identifier \fB,\fR concatenation
| \fBreadlob\fR identifier \fB,\fR identifier

.fi
.SH DESCRIPTION
These statements are used to perform operations against a database others than
actually executing sql.
These statements all refer to the current database in use and cannot have an at clause.
.P
The following statements exist:
.TP 14
.B commit
Flush arrays used for DML and commit the database transaction.
Note that commit (or rollback) must be done in the same session that has
executed the DML.
In particular for the main program, this means that you must wrap any DML
and the associated commit (or rollback) with an execute block as otherwise the DML
and the commit (or rollback) will be using different sessions.
This is the case even if the default database is declared dedicated.
.TP
.B rollback
Cancel any arrays used for DML and rollback the database transaction.
.TP
.B ociping
Perform the OCIPing() call.
.TP
.B modify database release
During the next release of a session back to a session pool,
which will take when a procedure finishes, the session will also
be disconnected from the database.
In addition to this syntax, the legacy syntax
.B release database
is supported.
.TP
.B modify database connectionclass s
Change the connectionclass for a database using sessionpool or drcp; this can only
be done 
.I before
the implicit OCISessionGet has been executed.
As an example, if you have a procedure that executes some sql that you call from
a controlloop that is started by a thread, the change of the connection class
can be done in the controlloop, but not in the procedure as a session will 
already have been acquired.
.TP
.B writelob l, value
The variable l must be of type clob on which OCILobWrite2() and OCILobTrim2() 
will be executed effectively writing the value to the database CLOB.
.TP
.B readlob l, s
The variable l must be of type clob and s of type string; an OCILobRead2()
call will be performed reading the value of the database CLOB into the string variable.
.SH BUGS
There is currently no support for piece wise reading and writing of CLOB data.
.P
It could be considered a bug that the main program does not have a database session.
.SH COPYRIGHT
Copyright \(co 2021 Oracle Corporation
.PP
Licensed under the Universal Permissive License v 1.0
as shown at 
https://oss.oracle.com/licenses/upl
.SH "SEE ALSO"
sqlstatement(1rwl), statement(1rwl), lobdeclaration(1rwl), controlloop(1rwl),
executionblock(1rwl)
