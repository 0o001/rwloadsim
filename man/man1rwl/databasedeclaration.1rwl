.TH databasedeclaration "1rwl" "September 2020" "RWP*Load Simulator" "Program Syntax"
.SH NAME
databasedeclaration \- RWP*Load Simulator declare a database connection
.SH SYNTAX
.nf
databasedeclaration ::=
  \fBdatabase\fR identifier
  databasespecification { databasespecification }

databasespecifiation ::=
  \fBconnect\fR concatenation
| \fBusername\fR concatenation
| \fBpassword\fR concatenation
| \fBdefault\fR
| \fBresults\fR
| \fBdrcp\fR
| \fBreconnect\fR
| [ \fBthreads\fR ] \fBdedicated\fR [ \fBrequestmark\fR | \fBstatemark\fR ] 
| \fBcursorcache\fR expression
| \fBsessionpool\fR expression [ \fB..\fR expression ]
| \fBconnectionclass\fR concatenation
| \fBconnectionpool\fR expression [ \fB..\fR expression ]
| \fBconnect\fR \fBconnectionpool\fR identifier
| \fBrelease\fR expression

.SH DESCRIPTION
In the RWP*Load Simulator a database is a named variable with attributes telling
how the actual database connection is established and used.
A rwloadsim program can and often does have multiple databases used for different
purposes.
As an example, you have a database that uses a session pool to connect to your
database under test as some application user, another database that uses a dedicated
connection as a user with dba privileges used for queries against v$ views, and a 
third database that is your repository.
.P
You use the 
.B database
keyword followed by the name to start a database declaration.
All attributes, except
.B username
are optional.
Attributes are typically constants, mostly strings, but can very will be expressions
using global or private variables.
.P
.SH "ATTRIBUTES"
.P
\fBusername\fR string
.RS 4
Specifies the login name used to connect to the database.
You can login using a user with dba privileges,
but rwloadsim does not support login using "as sysdba" or similar.
.RE
.P
\fBpassword\fR string
.RS 4
Specifies the login password used to connect to the database.
If not provided, you will be prompted for it.
.RE
.P
\fBconnect\fR string
.RS 4
Specifies the connect string used to connect to the database.
The value is provided directly to e.g. the OCIServerAttach call and can therefore be
of any format accepted such as short form URL style, "//host/service" or the name of 
an entry in the tnsnames.ora file.
If not provided, the empty string is assumed, which will imply connection via either the
TWO_TASK or the ORACLE_SID environment variable.  
For all practical purposes, this is similar to how sqlplus does it.
.RE
.P
\fBdefault\fR 
.RS 4
Make this the database used by default when no atclause is used.
It is recommended that you only use this in simple cases where only one database is in use;
if multiple databases are needed, you are advised always to explicitly choose then using
an atclause.
.RE
.P
\fBresults\fR 
.RS 4
Marks this database as the database used for the rwloadsim repository.
.RE
.P
\fBdrcp\fR 
.RS 4
Use pooling against a DRCP or PRCP database
using OCISessionPool.
Note that rwloadsim does not verify that you actually use a connect string
including either \fB:pooled\fR in URL style or \fB(server=pooled)\fR.
.RE
.P
.P
\fBreconnect\fR 
.RS 4
Only connect when an actual database session is required by your rwloadsim program.
Note that this can imply a high number of database connections and dis-connections.
.RE
.P
\fBdedicated\fR 
.P
\fBthreads dedicated\fR 
.RS 4
Use dedicated connections that are established once and kept logged on during 
the complete execution.
Each thread will get their own such a database connection.
If using the second syntax, the main thread will use the 
.B reconnect
method.  
.P
.RE
.P
.B \fBcursorcache\fR value
.RS 4
Set the value of the OCI_ATTR_STMTCACHESIZE; the default is 20.
.RE
.P
\fBsessionpool\fR value 
.P
\fBsessionpool\fR value \fB..\fR value 
.RS 4
Create a session pool, from which a session will be used when a procedure containing sql 
is being called.
In the former case, the pool will have a fixed size, in the latter case, the size will
be variable between the two values provided.
OCISessionPool is used to implement this.
.RE
.P
\fBconnectionpool\fR value
.P
\fBconnectionpool\fR lo \fB..\fR hi
.RS 4
Create a connectionpool pool, that can subsequently be used as the connection 
for dedicated, threads dedicated or reconnect database.
In itself, a connection pool cannot be used to execute any sql or database statements
as it has no session associated with it; a session only gets created when the 
connection pool is used by an actual database.
The pool itself can have a size or a range of sizes,
and it is implemented using OCIConnectionPool.
.RE
.P
\fBconnect\fR \fBconnectionpool\fR identifier
.RS 4
When creating a dedicated, threads dedicated or reconnect database, 
rather than using an ordinary connect string, use the named connection pool.
.RE
.P
.B \fBrelease\fR value
.RS 4
For a pool, set the timeout value for idle
sessions (OCI_ATTR_SPOOL_TIMEOUT)
or connections (OCI_ATTR_CONN_TIMEOUT);
the default is 60s.
.RE
.P
.B \fBconnectionclass\fR string
.RS 4
For drcp and sessionpool this option specifies the required
connection class that will be set using OCI_ATTR_CONNECTION_CLASS.
If none is provided a default of "rwloadsim" will be used.
.RE
.SH USAGE
Dedicated database do not include session pooling and the connection will be established 
when the database is declared or when a thread is started.
The database connection will be held until end of the program or thread.
.P
If a (threads) dedicated database has been given the
.B requestmark
attribute, 
OCIRequestBegin() and OCIRequestEnd() will be called at the beginning and end 
of the first procedure containing SQL (or having explicit statistics).
This 
can be used to test Application Continuity when a session pool is not in use.
.P
If a (threads) dedicated database has been given the
.B statemark
attribute, the 
state of the session will change to OCI_SESSION_STATEFUL respectively 
OCI_SESSION_STATELESS at the beginning and end of the first procedure 
containing SQL (or having explicit statistics).
This can improve session sharing with DRCP and PRCP.
.P
Both features, requestmark and statemark, are to be considered experimental and may
change in a future release.
.P
For databases that include some type of pooling (sessionpool, reconnect or drcp),
session acquire and release takes place at the beginning and end
of the first procedure containing SQL, or the first procedure with an
explicit statistics attribute.
.P
The RWP*Load Simulator uses several methods to prevent database connection storms from happening.
A connection storm is characterized by an attempt to create many
database connections almost simultaneously.
If you are using variable sized session pools,
are using the reconnect method or extensively use 
.B release database,
the risk of running into connection storms will be considerably
higher than with any other connection methods.
.P
.SH "FAILURES"
If establishing a database connection fails with an error that is considered to
be of "temporary" or "recoverable" nature, rwloadsim will attempt making
the connection again.
A few examples of such errors are ORA-00018, "maximum number of sessions exceeded" and
ORA-03114 "not connected to ORACLE".
The attepmt at (re-)establishing the connection will be delayed by some seconds including
a random part in order to prevent connection storms.
Note that it is not guaranteed that a connection can be established.
The full list of these errors is available in the routine rwldberror3 found in rwlerror.c.
.SH COPYRIGHT
Copyright \(co 2021 Oracle Corporation
.br
Licensed under the Universal Permissive License v 1.0
as shown at https://oss.oracle.com/licenses/upl
.SH "SEE ALSO"
declaration(1rwl), databasestatement(1rwl)
