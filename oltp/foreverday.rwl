# Generate graphs for an entire day
# This is typically used after having executed
# oltpforever for a long time
#
$include:"parameters.rwl"
$if $# != 2 $then
  writeline stderr "please provide key and date (YYYY.MM.DD)";
$else
$include:"results.rwl"
$mute:50 # missing array

file outfile;

string mydate, rdate, komment, key, mykey;
integer runno;

integer olines := 0;

integer i1, i2, i3, i4, i5, i6, i7, i8;

execute at rwloadsim
    mykey := $1; mydate := $2;
      
    outfile := awrdirectory "/" mydate "." mykey ".html";

    string vname;

    sql rwlrunkey
      select w.runnumber, w.komment, w.key
      , to_char(w.rdate, 'Dy YYYY.MM.DD_HH24:MI:SS')
      , s.i1
      , s.i2
      , s.i3
      , s.i4
      , s.i5
      , s.i6
      , s.i7
      , s.i8
      from rwlrun w
      join
      (
	select runnumber
	, sum(val1) i1
	, sum(val2) i2
	, sum(val3) i3
	, sum(val4) i4
	, sum(val5) i5
	, sum(val6) i6
	, sum(val7) i7
	, sum(val8) i8
	from sysres 
	where resname = 'INSTCNT'
	and second < 10
	group by runnumber
      ) s
      on w.runnumber = s.runnumber
      where w.key = :mykey
      and w.hostname = :hostname
      and w.rdate between to_date(:mydate || '_00:00:00','YYYY.MM.DD_HH24:MI:SS')
		and     to_date(:mydate || '_23:59:59','YYYY.MM.DD_HH24:MI:SS')
      order by w.rdate
      /
      bind ":mydate" mydate, ":mykey" mykey, ":hostname" hostname;
      define 1 runno, 2 komment, 3 key, 4 rdate;
      define 5 i1, 6 i2, 7 i3, 8 i4, 9 i5, 10 i6, 11 i7, 12 i8;
    end;

    string(4000) oerlisting;

    sql oerlist
      select listagg(oer||'('||count(*)||')',', ')
      from oerstats
      where runnumber=:1
      group by oer
      /
      define 1 oerlisting;
      bind 1 runno;
    end;


    integer total := 0;
    integer cnt;
    string(200) txt;

    sql seloer
      select
      count(*)
      , any_value(oertxt)
      from oerstats
      where runnumber=:1
      group by oer
      order by oer
      /
      bind 1 runno;
      define 1 cnt, 2 txt;
      array 100;
    end;

    string prevdate, nextdate;

    sql selpn
      select
        to_char(to_date(:1,'YYYY.MM.DD')-1,'YYYY.MM.DD')
      , to_char(to_date(:1,'YYYY.MM.DD')+1,'YYYY.MM.DD')
      from dual;
      bind 1 mydate;
      define 1 prevdate, 2 nextdate;
    end;

    selpn;

    # print the header
    writeline outfile "<h1 id=\"daytop\">Throughput for all runs on "  mydate " for " rwl_heading " </h1>";
    writeline outfile "<a href=\"" prevdate "." mykey ".html\">previous day</a>";
    writeline outfile "<a href=\"" nextdate "." mykey ".html\">next day</a>";
    writeline outfile " <a href=\"" rwl_daily_html "\">list of all days</a>";

    string(1000) hdir;
    hdir := awrdirectory "/" mydate "_" mykey "_files/";
    if not access(hdir, "wd") then
      null system("mkdir -p " hdir);
    end if;

    # Check/list errors

    string oertxt, oerinst;
    integer oercnt, oernum;
    sql dailyerrors
      select o.oer
      , any_value(oertxt)
      , count(*)
      , o.oerinst
      from oerstats o
      join rwlrun w
      on o.runnumber = w.runnumber
      where w.key = :mykey
      and w.hostname = :hostname
      and w.rdate between to_date(:mydate||'_00:00:00','YYYY.MM.DD_HH24:MI:SS')
		  and     to_date(:mydate||'_23:59:59','YYYY.MM.DD_HH24:MI:SS')
      group by o.oer, o.oerinst
      order by o.oer, o.oerinst
      /
      bind ":mydate" mydate, ":mykey" mykey, ":hostname" hostname;
      define 1 oernum, 2 oertxt, 3 oercnt, 4 oerinst;
    end;

    string(100000) errhtml;
    integer haserror := 0;
    errhtml  :="<h2>Errors during " mydate " for " rwl_heading "</h2>\n<table>" ;

    errhtml ||="<tr> <th>Count</th> <th>Instance</th> <th>Error</th> <th align='left'>Error text</th></tr>\n";

    for dailyerrors loop
      errhtml ||="<tr> <td align='right'>"  oercnt "</td>"
	     "<td>" oerinst "</td>"
	     "<td align='right'>" substrb(oertxt,5,5) "</td>"
	     "<td>" oertxt "</td></tr>\n";
      haserror += 1;
    end loop;

    if haserror then
      writeline outfile errhtml;
      writeline outfile "</table><br>";
    end if;

    # Output the percentile graphs
    writeline outfile "<h2> Execution time percentiles</h2>";
    writeline outfile "<embed src=\"" mydate "_" mykey "_files/make_order.svg\">";
    writeline outfile "<embed src=\"" mydate "_" mykey "_files/search_products.svg\"><br>";
    writeline outfile "<embed src=\"" mydate "_" mykey "_files/query_order.svg\">";
    writeline outfile "<embed src=\"" mydate "_" mykey "_files/complex_query.svg\"><br>";
    writeline outfile "<embed src=\"" mydate "_" mykey "_files/aw_transaction.svg\"><br>";
    writeline outfile "Png versions: <a href=\"" mydate "_" mykey "_files/make_order.png\">make_order.png</a> ";
    writeline outfile "<a href=\"" mydate "_" mykey "_files/search_products.png\">search_products.png</a> ";
    writeline outfile "<a href=\"" mydate "_" mykey "_files/query_order.png\">query_order.png</a> ";
    writeline outfile "<a href=\"" mydate "_" mykey "_files/complex_query.png\">complex_query.png</a>";
    writeline outfile "<a href=\"" mydate "_" mykey "_files/complex_query.png\">aw_transaction.png</a><br>";

    writeline outfile "<h2 id=\"dayruns\">Runs during this day</h2>Instance(s) used at the begin of each run, and errors (if any) are shown<ul>";
    # list all runs with links
    for rwlrunkey loop
      write outfile "<li><a href=\"#" runno "\">", rdate, "</a>, inst:";
      if i1 then write outfile " 1"; end if;
      if i2 then write outfile " 2"; end if;
      if i3 then write outfile " 3"; end if;
      if i4 then write outfile " 4"; end if;
      if i5 then write outfile " 5"; end if;
      if i6 then write outfile " 6"; end if;
      if i7 then write outfile " 7"; end if;
      if i8 then write outfile " 8"; end if;
      oerlisting := "";
      oerlist;
      if oerlisting = "" then
        writeline outfile "</li>";
      else
        writeline outfile ", errors:", oerlisting, "</li>";
      end if;

    end loop;
    # and the real data
    string awd;
    writeline outfile "</ul><h2>All run data</h2>";
    for rwlrunkey loop
      if access(awrdirectory "/" runno, "d") then
        awd := runno;
      else
        awd := "r" runno/1000 "/" runno;
      end if;
      writeline outfile "<h2 id=\"" runno "\">", runno, key, rdate, komment, "</h2>";
      writeline outfile "<a href=\"" awd "/" runno "_awr.html\">awr report</a>";
      write     outfile "instances "; 
      if i1 then write outfile " 1"; end if;
      if i2 then write outfile " 2"; end if;
      if i3 then write outfile " 3"; end if;
      if i4 then write outfile " 4"; end if;
      if i5 then write outfile " 5"; end if;
      if i6 then write outfile " 6"; end if;
      if i7 then write outfile " 7"; end if;
      if i8 then write outfile " 8"; end if;
      writeline outfile "</a> <a href=\"" awd "\">all details</a>";
      writeline outfile " <a href=\"#daytop\">top of current day</a>";
      writeline outfile " <a href=\"#dayruns\">list for current day</a>";

      total := 0;
      for seloer loop
	if ! total then
	  writeline outfile " - this run had errors:<table>";
	end if;
	total += 1;
	writeline outfile "<tr><td>", cnt, "</td><td>", txt, "</td>";
      end loop;
      if total then
	writeline outfile "</table>";
      else
	writeline outfile "<br>";
      end if;
      writeline outfile "<embed src=\"" awd "/" runno ".svg\"><br>";

      olines += 1;
    end loop;

    writeline outfile "<a href=\"" prevdate "." mykey ".html\">previous day</a>";
    writeline outfile "<a href=\"" nextdate "." mykey ".html\">next day</a>";
    writeline outfile " <a href=\"" rwl_daily_html "\">list of all days</a>";
    outfile := null;
    printline "Total " olines " runs found for key=" mykey ", date=" mydate ", hostname=" hostname;
    # remove the files if they have no real contents
    if not olines then
      null system("rm " awrdirectory "/" mydate "." mykey ".html");
    end if;

end;
$endif
