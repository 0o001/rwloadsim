# Copyright (c) 2021 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/

# bengsig   9-feb-2023 - Wrap ociping, dualping with query
# bengsig  25-oct-2022 - External control
# bengsig         2019 - Creation

# this is called from run.sh to save
# ping rates to a csv file
# 
# Call something like this after preparing run
#
# rwloadsim -M prepfile -A 1 -i runperiod:=NNN runping.rwl 

$include:"parameters.rwl"
$if xc_enabled $then
 $include:"results.rwl"
 $include:"xc_implementation.rwl"
$endif

# Declare database locally rather than including run_user.rwl

database rwl_ping
  username rwl_run1_username
  password rwl_run1_password
  connect pool_connect
  sessionpool 0..2 ;

private integer one;

private file pingcsv;

private double duping, msping, tim1, tim2, tim3;

private sql sel1dual 
  select 1 from dual;
  define 1 one;
end;

private integer rn;
private sql wrapfetch
  select rownum from dual connect by rownum<=5;
  array 1;
  define 1 rn;
end;

private procedure writeping()
  pingcsv >>= resultsdir || subdir || runnumber || "/ping.csv";
  for wrapfetch loop
    # Make sure we get a session even with implicit pool
    if rn = 4 then
      # And now do the real timing
      ociping; # To make sure session and all memory is loaded
      sel1dual;
      # now actually time a ping
      tim1 := runseconds;
      ociping;
      tim2 := runseconds;
      sel1dual;
      tim3 := runseconds;
    end if;
  end loop;
  msping := 1000 * (tim2-tim1);
  duping := 1000 * (tim3-tim2);
  fprintf pingcsv, "%.2f %.3f %.3f\n", tim3, msping, duping;
  pingcsv := null;
end writeping;

run

$if xc_enabled $then
  threads 1 at rwloadsim
    for every xc_refresh stop runperiod loop
      xc_read(0);
      if xc_stopnow=1 or xc_stopnow=2 then break; end if;
    end loop;
  end threads;
$endif

  threads 1 at rwl_ping
    for start 1 queue every 2 stop runperiod loop
      writeping();
      $if xc_enabled $then if xc_stopnow=1 or xc_stopnow=2 then break; end if; $endif 
    end loop;
  end threads;
end run;
