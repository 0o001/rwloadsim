# sqlid2file.rwl - create a file with the text of a specified sqlid
#
# Copyright (c) 2022 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/
#
# History
#
# bengsig  28-apr-2022 - Exit on connect error
# bengsig  ca 2020     - Creation
#
# usage: rwloadsim -ul system/{password}@//host/database sqlid2file.rwl sqlid
#
# the file generated will be named sqlid.rws
#
# The actual sql text for that sqlid will be
# found in either gv$sql or in dba_hist_sqltext
# 
# You can later use that file as the file option
# to a sql declaration with the effect that
# rwloadsim executes the exact same SQL statement
# that was earlier by some applicaiton
#
# rwloadsim -ul system/{password}  sqlid2file.rwl gnzsgs00h57s5
# Assuming the sqlid gnzsgs00h57s5 is found in either gv$sql or
# the workload repository table dba_hist_sqltext, running this will show:
# text of sqlid gnzsgs00h57s5 found in gv$sql written to gnzsgs00h57s5.rws
# and the file gnzsgs00h57s5.rws will contain the text of the sqlstatement.
$longoption:file-count=1
$oraerror:stop

# If we didn't connect, don't do anything
if oraerror is not null and oraerror then
  exit 1;
end if;

private file fil;
  
private string(200000) sqltext; # 1y4f4wtu63797 is about 98k
private integer gotit;

# First try from gv$sql
private sql vdollar
  select 1, sql_fulltext from gv$sql where sql_id=:1 and rownum<=1;
  bind 1 $1;
  define 1 gotit, 2 sqltext;
  array 1;
end;

# Otherwise from dba_hist_sqltext
private sql dbahist
  select 2, sql_text from dba_hist_sqltext where sql_id=:1 and rownum<=1;
  bind 1 $1;
  define 1 gotit, 2 sqltext;
  array 1;
end;

if $# = 0
then
  writeline stderr, "Usage: rwloadsim -ul system/{password}@//host/database sqlid2file.rwl sqlid ...";
  exit 1;
end if;

while $# loop
  # This will set gotit if it got it in gv$sql
  gotit := null;
  for vdollar loop
    null;
  end loop;

  if gotit is null then
    for dbahist loop
      null;
    end loop;
  end if;

  if gotit is null then
    writeline stderr, "sqlid "||$1||" neither found in gv$ nor in workload repository";
  else
    fil := $1||".rws";
    write fil, sqltext;
    fil := null;
    printline "text of sqlid "||$1||" found in "||
      gotit=1 ? "gv$sql" : "dba_hist_sqltext"
      ||" written to "||$1||".rws";
  end if;
  shift;
end loop;
