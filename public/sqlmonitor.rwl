# sqlid2mon.rwl
#
# Copyright (c) 2022 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/
#
# History
#
# bengsig  28-apr-2022 - Exit on connect error
# bengsig  13-apr-2022 - Change output's to use hyphen
# bengsig         2018 - Creation
#
#
# usage:
#
# rwloadsim -ul system/{password}@//host/database sqlid2mon.rwl sqlid
#
# output: sqlid.html

# If we didn't connect, don't do anything
if oraerror is not null and oraerror then
  exit 1;
end if;

$longoption:file-count=1

string sql_exec_start;
$useroption:sql_exec_start:"--sql_exec_start=YYYY.MM.DDTHH24:MI:SS	: provide sql_exec_start"

integer sql_exec_id;
$useroption:sql_exec_id:"--sql_exec_id=N		: provide sql_exec_id"

integer sql_plan_hash_value;
$useroption:sql_plan_hash_value:"--sql_plan_hash_value=N	: provide sql_plan_hash_value"

string con_name;
$useroption:con_name:"--con_name=con_name	: provide the con_name"

string(4100) output_file;
$useroption:output-file:"--output-file=filename	: use specified filename in stead of sqlid.html"

string(4100) output_directory := "." ;
$useroption:output-directory:"--output-directory=directory	: put output file in this directory"

$oraerror:stop

string(13) sqlid;

if $# != 1 then
  writeline stderr, "\nusage: rwloadsim [--userhelp] [options] -ul system/{password}@//host/database sqlmonitor.rwl sqlid";
  exit 1;
end if;

sqlid := $1;

$mute:46

string(10000000) txt;

clob res;

sql rep_sql
  begin
  :1 := dbms_sql_monitor.report_sql_monitor
  ( sql_id => :2
  , sql_exec_id => :3
  , sql_exec_start => to_date(:4,'DD.MM.YYYY"T"HH24:MI:SS')
  , sql_plan_hash_value => :5
  , con_name => :6
  , type => 'active'
  , report_level => 'ALL');
  end;
  /
  bindout 1 res;
  bind 2 sqlid, 3 sql_exec_id, 4 sql_exec_start;
  bind 5 sql_plan_hash_value, 6 con_name;
end;

rep_sql;

file out;
execute 

  readlob res, txt;

  if output_file = "" then
    out := output_directory "/" sqlid || ".html";
  else
    out := output_directory "/" output_file;
  end if;


  writeline out, txt;
  out := null;
end;

