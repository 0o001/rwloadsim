#!/bin/bash
# Copyright (c) 2021 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/

. oltp-setup-env

options="n:l:h:i:gk:r:HaAWK: -l graphs,help,runperiod:,processcount:,loprocess:,hiprocess:,interval:,awrwait,awrkill:,key:,allowreuse,preallocate"
usage="$commandname [-H] [-g] [-a] [-A] [-k key] [-r runperiod] [-l lo] [-h hi] [-i int] [-W] [-K n] [komment text ...]"
runperiod=595

allow=no
allocate=''
loproc=1
hiproc=4
procs=0
interval=0
help=no
key=''
graphs=''
WKoption=''

getopt -Q -o $options -- "$@" || exit 1
set -- `getopt -u -n $commandname -o $options -- "$@"`

while test $1 != '--'
do
  case $1 in 
    --interval|-i) interval=$2; shift; shift;
        ;;
    --hiprocess|-h) hiproc=$2; shift; shift;
        ;;
    --loprocess|-l) loproc=$2; shift; shift;
        ;;
    --processcount|-n) hiproc=$2; loproc=$2; interval=1; shift; shift;
        ;;
    --key|-k) key=$2; shift; shift;
        ;;
    --runperiod|-r) runperiod=$2; shift; shift;
        ;;
    --allowreuse|-A) allow=yes; shift;
        ;;
    --preallocate|-a) allocate=-a; shift;
        ;;
    --awrkill|-K) WKoption="$WKoption -K $2"; shift; shift;
        ;;
    --awrwait|-W) WKoption="$WKoption -W"; shift;
        ;;
    --graphs|-g) graphs=-g; shift;
        ;;
    --help|-H ) help=yes; shift;
        ;;
    esac;
done
shift
komment="$*"

if test $interval -eq 0
then
  interval=$loproc
fi

if test x$help = xyes
then
echo "$usage"
cat <<END
-H --help              : show this help
-l --loprocess    N    : specify lowest number of process and interval unless -i is used
-h --hiprocess    N    : specify highest number of process
-n --processcount N    : Ignore lo/hi and act as if this was just calling oltprun
-i --interval     N    : specify interval of process count between runs
-k --key          key  : set the value of the key to be used in repository
-r --runperiod    N    : set the runperiod in seconds, default $runperiod
-g --graphs            : show running graphs - requires X windows
-A --allowreuse        : allow reuse of key
-a --preallocate       : Pre allocate partitions
-W --awrwait           : Always wait for runsys rather than kill
-K --awrkill      nn   : Time to sleep before final kill (15)
END
exit 0
fi

if test x$key = x
then
  echo -k key must be specified 1>&2
  echo use -H for help 1>&2
  exit 1
fi

if test $loproc -lt 1
then
  echo -l $loproc is too low 1>&2
  exit 1
fi

if test $hiproc -lt 1
then
  echo -h $hiproc is too low 1>&2
  exit 1
fi

if test $interval -lt 1
then
  echo -i $interval is too low 1>&2
  exit 1
fi

if test $runperiod -lt 30
then
  echo -r $runperiod is less than 30 seconds 1>&2
  exit 1
fi

extra_args=''

tempdir=`mktemp -d`
trap "rm -rf $tempdir" 0 int

checkfile="$tempdir/check.txt"

# check that key hasn't been used
oltpcheckkey $key | tee $checkfile

if test $allow = no
then
  # and exit unless -a is given

  if grep -q runnumber $checkfile
  then
    exit 1;
  fi
fi

eval `rwloadsim -v -q parameters2shell.rwl`
runnumberfile="$tempdir/runnumber.txt"
        
proccount=$loproc

while test $proccount -le $hiproc
do
  # save output in file named by date
  tstamp=`date +%Y.%m.%dT%H:%M:%S`
  echo '****** scale run starting with' $proccount processes at $tstamp '******'

  oltpcore $WKoption $graphs $allocate -p $runnumberfile -n $proccount -k $key -r $runperiod -- $komment \
    < /dev/null 2>> $resultsdir/$tstamp | tee -a $resultsdir/$tstamp
  # get the runnumber was and move output file
  runnumber=`cat $runnumberfile`
  eval `rwloadsim -q -A 1 subdir.rwl $runnumber`
  mv $resultsdir/$tstamp $resultsdir$subdir$runnumber/$runnumber.out
  # then create a symlink in the direcoty where awr is 
  rm -f $awrdirectory$subdir$runnumber/$runnumber.txt
  cp $resultsdir$subdir$runnumber/$runnumber.out $awrdirectory$subdir$runnumber/$runnumber.txt

  # increase proccount
  proccount=`expr $proccount + $interval`
done

# and do the final report with html, etc
oltpscalereport $key -- $komment
