#!/bin/bash
# Copyright (c) 2021 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/

# Changes:
#
# 18-mar-2021 bengsig  Make -a much faster by only updating html 

. oltp-setup-env

usage="$commandname [-H] [-a] [-f] [-k key] YYYY.MM.DD"
options="Hfak:"

createall=no
help=no
key=$RWLOLTP_NAME

set -- `getopt -u -n $commandname -o $options -- "$@"`

while test $1 != '--'
do
  case $1 in 
    -f) createall=full; shift
        ;;
    -a) createall=yes; shift
        ;;
    -k) key=$2; shift; shift;
        ;;
    -H) help=yes; shift;
        ;;
    esac;
done

eval `rwloadsim -q parameters2shell.rwl`

if test x$help = xyes
then
cat <<END
$usage

-H     : Print this help
-k key : Specify key, default $RWLOLTP_NAME
-f     : Also (re-)create $rwl_daily_html with full daily list (long running)
-a     : Also modify $rwl_daily_html with the new entries

Create a html file with all runs from one day from oltpforever 

key is the key used for the run, i.e. -k argument to oltpforever
YYYY.MM.DD is the wanted day

The result will be created in awr directory and
will be named YYYY.MM.DD.$RWLOLTP_NAME.html
END
exit 0
fi

shift

if test $# -lt 1
then
  echo "$usage" 1>&2
  exit 1
fi

day=$1

# generate the percentile plots
rwloadsim daydata.rwl ';' $key $day || exit 1
# and the html stuff
rwloadsim foreverday.rwl ';' $key $day || exit 1

if test $createall = full
then
  # rebuild the file completely
  htmlfile=$awrdirectory/$rwl_daily_html
  rm -f $htmlfile
  echo '<H1>All days for' $rwl_heading $key '</H1>' > $htmlfile
  echo 'Columns contain:<br><ul><li>Link to daily results</li>' >> $htmlfile
  echo '<li>Instances used at the start of the day</li>' >> $htmlfile
  echo '<li>OER numbers with counts during the day</li></ul>' >> $htmlfile
  echo '<table><tr><td><b>Date</b></td><td><b>inst</b></td><td><b>OER list</b></td></tr>' >> $htmlfile
  (cd $awrdirectory; ls ????.??.??.$key.html | sort -r) |
  while read url
  do
    date=`echo $url | sed 's/\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/'`
    rwloadsim -q oerhtmlday.rwl ';' $key $date $url
  done >> $htmlfile
  echo '</table>' >> $htmlfile
fi

if test $createall = yes
then
  # update the file with the changed or new entry
  htmlfile=$awrdirectory/$rwl_daily_html
  rm -f $htmlfile.new
  # Check if this entry is new
  if egrep -q 'href="'$day.$key.html $htmlfile
  then
    new=no
  else
    new=yes
  fi
  cat $htmlfile | while read hl
  do
    dl=`echo $hl | sed -r -n 's/^.*href="([0-9]+\.[0-9]+\.[0-9]+)\.'$key'.*$/\1/ p'`
    # Now dl is either empty or the date on the line in the file
    if test x"$dl" = x 
    then
      # Not a date line, just copy
      echo $hl >> $htmlfile.new
      if test $new = yes -a "$hl" = '<table><tr><td><b>Date</b></td><td><b>inst</b></td><td><b>OER list</b></td></tr>'
      then
	# Add a line for the new day
	rwloadsim -q oerhtmlday.rwl ';' $key $day $day.$key.html >> $htmlfile.new
      fi
    else
      # it is a date line
      if test $day = $dl
      then
        # the date in the file is the same as we ask for
	rwloadsim -q oerhtmlday.rwl ';' $key $dl $dl.$key.html >> $htmlfile.new
      else
        # otherwise just copy
	echo $hl >> $htmlfile.new
      fi
    fi
  done
  # save the old and rename
  mv -f $htmlfile $htmlfile.old
  mv $htmlfile.new $htmlfile
fi

