.TH statistics "1rwl" "September 2020" "RWP*Load Simulator" "Program Syntax"
.SH NAME
rwlman \- RWP*Load Simulator execution statistics
.SH SYNOPSIS
An important feature of the RWP*Load Simulator is to save execution statistics
and make these available for later processing, graphing, reporting, etc.
To do this, a repository database is required that typically is different from
the database under test.
In your rwloadsim program, procedures executing sql are the items on which 
various times are measured and saved.
Through options to rwloadsim, you can decide how much statistics will be saved.
.SH DESCRIPTION
Consider the example shown at threadexecution(1rwl) where three procedures
named abc, def, and xyz, are declared.
Each of them is assumed to implement some business logic that is being simulated.
When one of these procedures execute against a database using a session pool, these steps
are involved:
.P
.RS 4
get session from pool
.P
execute business logic
.P
release session back to pool
.RE
.P
When simple statistics (using
.B -s
or
.B --statistics
option to rwloadsim), the times taken to get the session and to execute the business logic
are measured and the sum from all executions of these two measurements
together with an execute count 
are saved in the repository database together with the name of the procedure.
.P
The total time to get the session from the pool and to execute the business logic
would be the time perceived by an end-user who cannot distinguish between the two.
If you are using
.B -ss
or
.B --histograms
rwloadsim will additionally save histograms of this total time.
After each execution, the total time is grouped into a bucket that is a factor two wide,
so buckets may be intervals like [1ms;2ms], [2ms;4ms], [4ms;8ms], etc
and the count of executions in each bucket together with the total time for that bucket
is saved in the repository.
.P
By using
.B -sss
or
.B --persecond
rwloadsim will additionally keep track of the number of executions of each procedure
per second through the whole run.
.SH USAGE
In order to save any statistics, you need to have a database declared with the
.B results
attribute.
For each execution of rwloadsim with a results database and with one of the statistics
options, a sequence number is retrieved from the results database.
This sequence number is saved in various tables in the RUNNUMBER column and it is
available in your rwloadsim program in the variable runnumber.
.P
In multi-process runs, a number of rwloadsim processes are using the same number; 
however each process is saving its own statistics values to the repository tables.
Therefore, all such tables have a column named PROCNO, which is the Operating System 
process number unless provided be a 
.B -p procno
option to rwloadsim.
.P 
To get aggregated results for all processes in one multi-process run, there are additional
views in the repository database; these are roughly the same as their underlying tables
but have a PCOUNT column in stead of the PROCNO column.
.SH TABLES
The repository containts the following tables:
.P
\fBrwlrun\fR
.RS 4
Stores information about each run such as its runnumber, a key and a comment provided
as options to rwloadsim, common start time, etc.
.RE
.P
\fBrunres\fR
.RS 4
Saves statistics from the
.B -s
option including procedure name, total time spent getting a session and total time executing.
.RE
.P
\fBhistogram\fR
.RS 4
Saves statistics from the
.B -ss
option including procedure name, bucket interval, count and total time in each bucket.
.RE
.P
\fBpersec\fR
.RS 4
Saves statistics from the
.B -sss
option including procedure name, second after the common start time and count of executions
in that second.
.RE
.P
\fBoerstats\fR
.RS 4
Saves statistics from the
.B -r
option, which effectively is a log of all ORA- errors recieved.
Note that the default behavior of rwloadsim after receving an ORA- error is to continue unless
you have used the $oraerror:stop directive.
.RE
.P
\fBrwlcpu, sysres\fR
.RS 4
These tables are not used by rwloadsim but are created in the repository.
There are used by several demonstation workloads.
.RE
.SH VIEWS
In addition to tables, the repository has views.
For the three primary tables, runres, histogram, persec 
and for the auxiliary table rwlcpu
views named 
.BR runres_a ,
.BR histogram_a ,
.BR persec_a ,
.BR rwlcpu_a ,
perform aggregation.
.P
The following additional views exist:
.P
\fBpercentiles\fR
.RS 4
For each run and procedure, the view shows average and 50%, 90%, etc. percentiles
of the user percieved execution times; i.e. the sum of the time to get a session
and to execute the actual code.
.RE
.P
\fBfractiles\fR
.RS 4
For each run and procedure, the view shows the histogram information
and addtionally show the percentage of all executions that is 
at least as fast as the upper limit in each histogram bucket.
.RE
.SH COPYRIGHT
Copyright \(co 2020 Oracle Corporation
.P
Licensed under the Universal Permissive License v 1.0
as shown at https://oss.oracle.com/licenses/upl
.SH "SEE ALSO"
rwloadsim(1rwl), directive(1rwl), runres(1rwl), histogram(1rwl), persec(1rwl),
oerstats(1rwl), percentiles(1rwl), rwlcpu(1rwl), sysres(1rwl), multiprocess(1rwl)
